{"version":3,"sources":["webpack:///./src/pages/about.js"],"names":["About","useState","undefined","trackToDisplay","setTrackToDisplay","isCurrentlyPlaying","setIsCurrentlyPlaying","imageData","useStaticQuery","useEffect","fetch","method","header","body","URLSearchParams","grant_type","refresh_token","client_id","client_secret","then","response","json","data","accessToken","access_token","headers","Authorization","Accept","songData","item","catch","err","console","error","currentTrack","name","toLowerCase","artist","artists","items","length","track","getLastPlayedSongRequest","lastTrack","TextAreaValue","style","maxWidth","marginBottom","className","fluid","display","flexDirection","justifyContent","height","xs","sm","alignItems","borderRadius","headShot","childImageSharp","alt","aerialbg"],"mappings":"6FAAA,6HAkNeA,UAzMD,WACZ,IADkB,EAK0BC,wBAASC,GAA9CC,EALW,KAKKC,EALL,OAMkCH,oBAAS,GAAtDI,EANW,KAMSC,EANT,KAaZC,EAAYC,yBAAe,cAkFjCC,qBAAU,WA5DwBC,MAhCC,yCAgCiC,CAClEC,OAAQ,OACRC,OAAQ,CACN,eAAgB,qCAElBC,KAAM,IAAIC,gBAAgB,CACxBC,WAAY,gBACZC,cACI,sIACJC,UAnCM,mCAoCNC,cAlCM,uCAsFLC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GA7B4B,IAACC,KA8BHD,EAAKE,aA9Bcd,MAnEjB,mEAmEuD,CAC5FC,OAAQ,MACRc,QAAS,CACPC,cAAc,UAAWH,EACzB,eAAgB,mBAChBI,OAAQ,sBAGTR,MAAK,SAACC,GACL,GAAIA,EACF,OAAOA,EAASC,UAKnBF,MAAK,SAACS,GACL,GAAIA,GAAYA,EAASC,KACvB,OAAOD,EAASC,QAKnBC,OAAM,SAACC,GACNC,QAAQC,MAAMF,OAOsCZ,MAChD,SAACe,GACKA,GACF5B,GAAsB,GACtBF,EAAkB,CAChB+B,KAAMD,EAAaC,KAAKC,cACxBC,OAAQH,EAAaI,QAAQ,GAAGH,KAAKC,iBAxDlB,SAACb,GAAD,OAAiBb,MAhDjB,+DAgDiD,CAChFC,OAAQ,MACRc,QAAS,CACPC,cAAc,UAAWH,EACzB,eAAgB,mBAChBI,OAAQ,sBAGTR,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACS,GACL,GAAIA,GAAYA,EAASW,OAASX,EAASW,MAAMC,OAAS,EACxD,OAAOZ,EAASW,MAAM,GAAGE,SAK5BX,OAAM,SAACC,GACNC,QAAQC,MAAMF,MA0CNW,CAAyBpB,EAAKE,cAAcL,MAAK,SAACwB,GAC5CA,IACFrC,GAAsB,GACtBF,EAAkB,CAChB+B,KAAMQ,EAAUR,KAAKC,cACrBC,OAAQM,EAAUL,QAAQ,GAAGH,KAAKC,4BAQjD,IAEH,IAAMQ,EAAgB,kBACpB,kBAAC,IAAD,CAAKC,MAAO,CAAEC,SAAU,MACtB,yLAKA,0IAIA,6BACA,8GAIC3C,GAAkBE,GACjB,uBAAGwC,MAAO,CAAEE,aAAc,IAA1B,4BAC+B5C,EAAegC,KAD9C,OACyDhC,EAAekC,QAGzElC,IAAmBE,GAClB,uBAAGwC,MAAO,CAAEE,aAAc,IAA1B,sBACyB5C,EAAegC,KADxC,OACmDhC,EAAekC,UAMxE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWQ,MAAO,CAAEC,SAAU,MAAQE,UAAU,SAASC,OAAK,GAC5D,kBAAC,IAAD,CACEJ,MAAO,CACLK,QAAS,OACTC,cAAe,SACfC,eAAgB,gBAChBC,OAAQ,SAGV,8BACA,kBAAC,IAAD,CACEC,GAAI,EACJC,GAAI,EACJV,MAAO,CACLK,QAAS,OACTE,eAAgB,gBAChBI,WAAY,WAGd,yBAAKX,MAAO,CAAEK,QAAS,OAAQE,eAAgB,WAC7C,kBAAC,IAAD,CACEJ,UAAU,iBACVH,MAAO,CACLY,aAAc,KAEhBR,MAAO1C,EAAUmD,SAASC,gBAAgBV,MAC1CW,IAAI,cAGR,kBAAC,IAAD,KACE,kBAAChB,EAAD,QAGJ,kBAAC,IAAD,CACEI,UAAU,YACVH,MAAO,CACLY,aAAc,qBAEhBR,MAAO1C,EAAUsD,SAASF,gBAAgBV,MAC1CW,IAAI","file":"component---src-pages-about-js-113dbf0b58470cc6a7c4.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Img from \"gatsby-image\";\nimport TextArea from \"../components/TextArea\";\nimport Layout from \"../components/layout\";\n\nconst About = () => {\n  const SPOTIFY_LAST_PLAYED_PATH = \"https://api.spotify.com/v1/me/player/recently-played?limit=1\";\n  const SPOTIFY_CURRENTLY_PLAYING_PATH = \"https://api.spotify.com/v1/me/player/currently-playing?market=CA\";\n  const REQUEST_SPOTIFY_TOKEN_PATH = \"https://accounts.spotify.com/api/token\";\n\n  const [trackToDisplay, setTrackToDisplay] = useState(undefined);\n  const [isCurrentlyPlaying, setIsCurrentlyPlaying] = useState(false);\n\n  // eslint-disable-next-line no-useless-concat\n  const i = \"d36191afeefc45d\" + \"dbe74670b776e5ee4\";\n  // eslint-disable-next-line no-useless-concat\n  const s = \"adbb40111d4446249\" + \"ddca8ef10f002fa\";\n\n  const imageData = useStaticQuery(graphql`\n    query {\n      aerialbg: file(relativePath: { eq: \"aerialbg4.jpg\" }) {\n        childImageSharp {\n          fluid(maxWidth: 1115, webpQuality: 100) {\n            ...GatsbyImageSharpFluid_withWebp\n            ...GatsbyImageSharpFluidLimitPresentationSize\n          }\n        }\n      }\n\n      headShot: file(relativePath: { eq: \"tentridge.JPG\" }) {\n        childImageSharp {\n          fluid(webpQuality: 100) {\n            ...GatsbyImageSharpFluid_withWebp\n            ...GatsbyImageSharpFluidLimitPresentationSize\n          }\n        }\n      }\n    }\n  `);\n\n  const requestSpotifyToken = () => fetch(REQUEST_SPOTIFY_TOKEN_PATH, {\n    method: \"POST\",\n    header: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n    },\n    body: new URLSearchParams({\n      grant_type: \"refresh_token\",\n      refresh_token:\n          \"AQBkA0Z5pyep_amhaIBGxwnNLy_GPN0VVrzXnFKb799OhFbZTnTBF2uAF_rgDfoq6NzWOaIlF6mtCK_XH9aBX5XnJJ-jbaEWy-Mo8eYh6Nr0Hea8DupZZ7NnsALvqvrbSOE\",\n      client_id: i,\n      client_secret: s,\n    }),\n  });\n\n  const getLastPlayedSongRequest = (accessToken) => fetch(SPOTIFY_LAST_PLAYED_PATH, {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n  })\n    .then((response) => response.json())\n    .then((songData) => {\n      if (songData && songData.items && songData.items.length > 0) {\n        return songData.items[0].track;\n      }\n\n      return undefined;\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n\n  const getCurrentlyPlayingSongRequest = (accessToken) => fetch(SPOTIFY_CURRENTLY_PLAYING_PATH, {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n  })\n    .then((response) => {\n      if (response) {\n        return response.json();\n      }\n\n      return undefined;\n    })\n    .then((songData) => {\n      if (songData && songData.item) {\n        return songData.item;\n      }\n\n      return undefined;\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n\n  useEffect(() => {\n    requestSpotifyToken()\n      .then((response) => response.json())\n      .then((data) => {\n        getCurrentlyPlayingSongRequest(data.access_token).then(\n          (currentTrack) => {\n            if (currentTrack) {\n              setIsCurrentlyPlaying(true);\n              setTrackToDisplay({\n                name: currentTrack.name.toLowerCase(),\n                artist: currentTrack.artists[0].name.toLowerCase(),\n              });\n            } else {\n              getLastPlayedSongRequest(data.access_token).then((lastTrack) => {\n                if (lastTrack) {\n                  setIsCurrentlyPlaying(false);\n                  setTrackToDisplay({\n                    name: lastTrack.name.toLowerCase(),\n                    artist: lastTrack.artists[0].name.toLowerCase(),\n                  });\n                }\n              });\n            }\n          },\n        );\n      });\n  }, []);\n\n  const TextAreaValue = () => (\n    <Col style={{ maxWidth: 600 }}>\n      <p>\n        im a recent computer science and microbiology & immunology grad from the\n        university of british columbia currently working as a software engineer\n        at amazon\n      </p>\n      <p>\n        full stack web and ios developer with a subtle passion for design with\n        previous experience at apple and rbc\n      </p>\n      <br />\n      <p>\n        also an amateur cook, nature enthusiast and big time hockey and formula\n        one fan\n      </p>\n      {trackToDisplay && isCurrentlyPlaying && (\n        <p style={{ marginBottom: 0 }}>\n          {`currently jamming out to ${trackToDisplay.name} by ${trackToDisplay.artist}`}\n        </p>\n      )}\n      {trackToDisplay && !isCurrentlyPlaying && (\n        <p style={{ marginBottom: 0 }}>\n          {`last jammed out to ${trackToDisplay.name} by ${trackToDisplay.artist}`}\n        </p>\n      )}\n    </Col>\n  );\n\n  return (\n    <Layout>\n      <Container style={{ maxWidth: 1110 }} className=\"vh-100\" fluid>\n        <Col\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-between\",\n            height: \"100%\",\n          }}\n        >\n          <div />\n          <Row\n            xs={1}\n            sm={2}\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}\n          >\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <Img\n                className=\"about-headshot\"\n                style={{\n                  borderRadius: 150,\n                }}\n                fluid={imageData.headShot.childImageSharp.fluid}\n                alt=\"headshot\"\n              />\n            </div>\n            <TextArea>\n              <TextAreaValue />\n            </TextArea>\n          </Row>\n          <Img\n            className=\"about-img\"\n            style={{\n              borderRadius: \"10px 10px 0px 0px\",\n            }}\n            fluid={imageData.aerialbg.childImageSharp.fluid}\n            alt=\"image\"\n          />\n        </Col>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default About;\n"],"sourceRoot":""}