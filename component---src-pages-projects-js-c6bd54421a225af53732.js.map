{"version":3,"sources":["webpack:///./src/data/projects.js","webpack:///./src/pages/projects.js"],"names":["projects","name","url","description","tech","Projects","imageData","useStaticQuery","Container","className","fluid","Row","sm","style","display","flex","alignItems","justifyContent","Col","xs","borderRadius","maxWidth","file","childImageSharp","alt","map","project","key","marginBottom","href","target","rel","TextArea","secondary","t","padding","renderProjectItem"],"mappings":"kMA0BeA,EA1BE,CACf,CACEC,KAAM,iBACNC,IAAK,8CACLC,YAAa,8DACbC,KAAM,CAAC,MAAO,QAAS,UAEzB,CACEH,KAAM,QACNC,IAAK,4CACLC,YAAa,4CACbC,KAAM,CAAC,MAAO,UAEhB,CACEH,KAAM,cACNE,YACE,qEACFC,KAAM,CAAC,MAAO,QAAS,aAEzB,CACEH,KAAM,aACNE,YAAa,mBACbC,KAAM,CAAC,QAAS,S,wBC8DLC,UA1EE,WACf,IAAMC,EAAYC,yBAAe,cAuCjC,OACE,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,UAAU,4BAA4BC,MAAM,QACrD,kBAACC,EAAA,EAAD,CACEC,GAAI,EACJC,MAAO,CACLC,QAAS,OACTC,KAAM,EACNC,WAAY,SACZC,eAAgB,kBAGlB,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,CACEV,UAAU,eACVI,MAAO,CACLO,aAAc,oBACdC,SAAU,KAEZX,MAAOJ,EAAUgB,KAAKC,gBAAgBb,MACtCc,IAAI,WAGR,kBAACN,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACR,EAAA,EAAD,CAAKQ,GAAI,EAAGP,GAAI,GACbZ,GAAYA,EAASyB,KAAI,SAACC,GAAD,OAnDZ,SAACA,GAAD,OACxB,yBAAKjB,UAAU,eAAekB,IAAKD,EAAQzB,MACzC,uBACEY,MAAO,CAAEC,QAAS,eAAgBc,aAAc,IAChDC,KAAMH,EAAQxB,IACd4B,OAAO,SACPC,IAAI,cAEHL,EAAQzB,MAEX,kBAAC+B,EAAA,EAAD,CACEC,UACE,kBAACtB,EAAA,EAAD,KACGe,EAAQtB,KAAKqB,KAAI,SAACS,GAAD,OAChB,uBAAGrB,MAAO,CAAEsB,QAAS,YAAcR,IAAKO,GACrCA,QAMT,uBAAGzB,UAAU,uBAAuBiB,EAAQvB,eA8BCiC,CAAkBV","file":"component---src-pages-projects-js-c6bd54421a225af53732.js","sourcesContent":["const projects = [\n  {\n    name: \"stats on sight\",\n    url: \"https://devpost.com/software/stats-on-sight\",\n    description: \"augmented reality app featuring live game data of NHL games\",\n    tech: [\"ios\", \"swift\", \"ARKit\"],\n  },\n  {\n    name: \"abode\",\n    url: \"https://devpost.com/software/abode-tn9hc8\",\n    description: \"chores and expense tracking for roommates\",\n    tech: [\"ios\", \"swift\"],\n  },\n  {\n    name: \"check mates\",\n    description:\n      \"social media application to peer pressure friends to go to the gym\",\n    tech: [\"ios\", \"swift\", \"firebase\"],\n  },\n  {\n    name: \"alexlaw.me\",\n    description: \"personal website\",\n    tech: [\"react\", \"css\"],\n  },\n];\n\nexport default projects;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Img from \"gatsby-image\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport projects from \"../data/projects\";\nimport TextArea from \"../components/TextArea\";\nimport Layout from \"../components/layout\";\n\nconst Projects = () => {\n  const imageData = useStaticQuery(graphql`\n    query {\n      file(relativePath: { eq: \"aerialbg3.jpg\" }) {\n        childImageSharp {\n          fluid(maxWidth: 1245, webpQuality: 100) {\n            ...GatsbyImageSharpFluid_withWebp\n            ...GatsbyImageSharpFluidLimitPresentationSize\n          }\n        }\n      }\n    }\n  `);\n\n  const renderProjectItem = (project) => (\n    <div className=\"project-item\" key={project.name}>\n      <a\n        style={{ display: \"inline-block\", marginBottom: 18 }}\n        href={project.url}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        {project.name}\n      </a>\n      <TextArea\n        secondary={(\n          <Row>\n            {project.tech.map((t) => (\n              <p style={{ padding: \"0px 15px\" }} key={t}>\n                {t}\n              </p>\n            ))}\n          </Row>\n        )}\n      >\n        <p className=\"project-description\">{project.description}</p>\n      </TextArea>\n    </div>\n  );\n\n  return (\n    <Layout>\n      <Container className=\"vh-100 projects-container\" fluid=\"true\">\n        <Row\n          sm={2}\n          style={{\n            display: \"flex\",\n            flex: 1,\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Col xs={3}>\n            <Img\n              className=\"projects-img\"\n              style={{\n                borderRadius: \"0px 10px 10px 0px\",\n                maxWidth: 500,\n              }}\n              fluid={imageData.file.childImageSharp.fluid}\n              alt=\"image\"\n            />\n          </Col>\n          <Col xs={8}>\n            <Row xs={1} sm={2}>\n              {projects && projects.map((project) => renderProjectItem(project))}\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default Projects;\n"],"sourceRoot":""}